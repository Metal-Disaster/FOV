local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local player = Players.LocalPlayer

getgenv().NoMusicController = {
    originalVolumes = {
        current = nil,
        chaseTheme = nil,
        menu = nil,
        selection = nil,
    },
    volumeChangedConnections = {},
    noMusicEnabled = false,
    heartbeatConnection = nil,
}

local ctrl = getgenv().NoMusicController

local function forceMuteSound(sound, key)
    if not sound or not sound:IsA("Sound") then return end

    if not ctrl.originalVolumes[key] then
        ctrl.originalVolumes[key] = sound.Volume
    end

    sound.Volume = 0

    if ctrl.volumeChangedConnections[key] then
        ctrl.volumeChangedConnections[key]:Disconnect()
    end

    ctrl.volumeChangedConnections[key] = sound:GetPropertyChangedSignal("Volume"):Connect(function()
        if ctrl.noMusicEnabled and sound.Volume ~= 0 then
            sound.Volume = 0
        end
    end)
end

local function restoreSound(sound, key)
    if not sound or not sound:IsA("Sound") then return end

    if ctrl.originalVolumes[key] then
        sound.Volume = ctrl.originalVolumes[key]
    end

    if ctrl.volumeChangedConnections[key] then
        ctrl.volumeChangedConnections[key]:Disconnect()
        ctrl.volumeChangedConnections[key] = nil
    end
end

function ctrl.toggleMusic(state)
    ctrl.noMusicEnabled = state

    local playerGui = player:FindFirstChild("PlayerGui")
    local soundtracks = playerGui and playerGui:FindFirstChild("soundtracks")
    local currentSound = soundtracks and soundtracks:FindFirstChild("current")

    local mainGui = playerGui and playerGui:FindFirstChild("maingui")
    local moduleStarter = mainGui and mainGui:FindFirstChild("ModuleStarter")
    local chaseHandler = moduleStarter and moduleStarter:FindFirstChild("ChaseHandler")
    local chaseTheme = chaseHandler and chaseHandler:FindFirstChild("ChaseTheme")

    local menuSound = StarterGui:FindFirstChild("soundtracks") and StarterGui.soundtracks:FindFirstChild("Menu")
    local selectionSound = StarterGui:FindFirstChild("soundtracks") and StarterGui.soundtracks:FindFirstChild("selection")

    if not state then
        restoreSound(currentSound, "current")
        restoreSound(chaseTheme, "chaseTheme")
        restoreSound(menuSound, "menu")
        restoreSound(selectionSound, "selection")
    else
        forceMuteSound(currentSound, "current")
        forceMuteSound(chaseTheme, "chaseTheme")
        forceMuteSound(menuSound, "menu")
        forceMuteSound(selectionSound, "selection")
    end
end

function ctrl.startConstantMute()
    if ctrl.heartbeatConnection then
        ctrl.heartbeatConnection:Disconnect()
    end

    ctrl.heartbeatConnection = RunService.Heartbeat:Connect(function()
        if not ctrl.noMusicEnabled then return end

        local playerGui = player:FindFirstChild("PlayerGui")
        local soundtracks = playerGui and playerGui:FindFirstChild("soundtracks")
        local currentSound = soundtracks and soundtracks:FindFirstChild("current")

        local mainGui = playerGui and playerGui:FindFirstChild("maingui")
        local moduleStarter = mainGui and mainGui:FindFirstChild("ModuleStarter")
        local chaseHandler = moduleStarter and moduleStarter:FindFirstChild("ChaseHandler")
        local chaseTheme = chaseHandler and chaseHandler:FindFirstChild("ChaseTheme")

        local menuSound = StarterGui:FindFirstChild("soundtracks") and StarterGui.soundtracks:FindFirstChild("Menu")
        local selectionSound = StarterGui:FindFirstChild("soundtracks") and StarterGui.soundtracks:FindFirstChild("selection")

        forceMuteSound(currentSound, "current")
        forceMuteSound(chaseTheme, "chaseTheme")
        forceMuteSound(menuSound, "menu")
        forceMuteSound(selectionSound, "selection")
    end)
end

ctrl.startConstantMute()
